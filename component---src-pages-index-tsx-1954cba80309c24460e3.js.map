{"version":3,"file":"component---src-pages-index-tsx-1954cba80309c24460e3.js","mappings":"2MA0EA,UAnEuC,SAAHA,GAA4B,IAADC,EAArBC,EAAIF,EAAJE,KAAMC,EAAQH,EAARG,SACxCC,GAAkC,QAAtBH,EAAAC,EAAKG,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,QAAK,QACzCC,EAAQN,EAAKO,OAAOC,MAE1B,OAAqB,IAAjBF,EAAMG,OAENC,EAAAA,cAACC,EAAAA,EAAM,CAACV,SAAUA,EAAUI,MAAOH,GACjCQ,EAAAA,cAACE,EAAAA,GAAG,CAACP,MAAM,cACXK,EAAAA,cAACG,EAAAA,GAAG,MACJH,EAAAA,cAAA,SAAG,8JAUPA,EAAAA,cAACC,EAAAA,EAAM,CAACV,SAAUA,EAAUI,MAAOH,GACjCQ,EAAAA,cAACE,EAAAA,GAAG,CAACP,MAAM,cACXK,EAAAA,cAAA,MAAII,UAAU,2CACXR,EAAMS,KAAI,SAAAC,EAA4BC,GAAmB,IAA5CC,EAAIF,EAAJE,KACNb,EAAQa,EAAKC,YAAYd,OAASa,EAAKE,OAAOC,KAC9CC,EAAoB,IAAVL,EAAc,QAAU,QACxC,OACEP,EAAAA,cAAA,MAAIa,IAAKL,EAAKE,OAAOC,KAAMP,UAAWQ,GACpCZ,EAAAA,cAAA,WAASc,WAAS,EAACC,SAAS,6BAC1Bf,EAAAA,cAAA,cACEA,EAAAA,cAAA,SAAOI,UAAU,wCACdI,EAAKC,YAAYO,MAEpBhB,EAAAA,cAAA,MAAII,UAAU,kDACZJ,EAAAA,cAACiB,EAAAA,KAAI,CACHC,GAAIV,EAAKE,OAAOC,KAChBQ,SAAS,MACTf,UAAU,oEAEVJ,EAAAA,cAAA,QAAMmB,SAAS,YAAYxB,MAIjCK,EAAAA,cAAA,SAAG,UAAQQ,EAAKC,YAAYW,OAC5BpB,EAAAA,cAAA,KACEqB,wBAAyB,CACvBC,OAAQd,EAAKe,SAAWf,EAAKC,YAAYe,aAE3CL,SAAS,cACTf,UAAU,wCAEZJ,EAAAA,cAAA,WAASI,UAAU,qEACfI,EAAKC,YAAYgB,MAAQ,IACxBC,MAAM,KACNrB,KAAI,SAACsB,GAAS,OAAKA,EAAEC,MAAM,IAC3BvB,KAAI,SAACsB,GAAS,OACb3B,EAAAA,cAAA,QAAMa,IAAKc,GAAE,IAAMA,EAAW,MAM5C,KAIR,C","sources":["webpack://gatsby-starter-tailwind-mdx-blog/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport { Bio, Seo } from \"@/components/common\"\r\nimport Layout from \"@/components/Layout\"\r\nimport { INode, PageProps } from \"@/definitions\"\r\n\r\nconst BlogIndex: React.FC<PageProps> = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMdx.edges\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Seo title=\"All posts\" />\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <Seo title=\"All posts\" />\r\n      <ol className=\"divide-y divide-skin-fg-muted max-w-2xl\">\r\n        {posts.map(({ node }: { node: INode }, index: number) => {\r\n          const title = node.frontmatter.title || node.fields.slug\r\n          const classes = index === 0 ? \"pb-12\" : \"py-12\"\r\n          return (\r\n            <li key={node.fields.slug} className={classes}>\r\n              <article itemScope itemType=\"http://schema.org/Article\">\r\n                <header>\r\n                  <small className=\"font-yrsa text-skin-fg-muted text-lg\">\r\n                    {node.frontmatter.date}\r\n                  </small>\r\n                  <h2 className=\"text-2xl font-exo font-black text-skin-fg mt-3\">\r\n                    <Link\r\n                      to={node.fields.slug}\r\n                      itemProp=\"url\"\r\n                      className=\"rounded-md focus:outline-none focus:ring-4 focus:ring-skin-focus\"\r\n                    >\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                    </Link>\r\n                  </h2>\r\n                </header>\r\n                <p>Order: {node.frontmatter.order}</p>\r\n                <p\r\n                  dangerouslySetInnerHTML={{\r\n                    __html: node.excerpt || node.frontmatter.description,\r\n                  }}\r\n                  itemProp=\"description\"\r\n                  className=\"text-lg font-yrsa text-skin-fg mt-3\"\r\n                />\r\n                <section className=\"font-yrsa text-skin-fg-muted uppercase md:text-sm space-x-2 mt-3\">\r\n                  {(node.frontmatter.tags || \"\")\r\n                    .split(\",\")\r\n                    .map((s: string) => s.trim())\r\n                    .map((s: string) => (\r\n                      <span key={s}>{`#${s}`}</span>\r\n                    ))}\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMdx(sort: { fields: [frontmatter___order], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          body\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n            type\r\n            order\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","_data$site$siteMetada","data","location","siteTitle","site","siteMetadata","title","posts","allMdx","edges","length","React","Layout","Seo","Bio","className","map","_ref2","index","node","frontmatter","fields","slug","classes","key","itemScope","itemType","date","Link","to","itemProp","order","dangerouslySetInnerHTML","__html","excerpt","description","tags","split","s","trim"],"sourceRoot":""}